{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/components/AddressSearch.svelte","../../src/components/Switch.svelte","../../src/components/Toolbox.svelte","../../src/utils/keys.js","../../src/components/layers/Layer_SLA.svelte","../../src/components/layers/Layer_SWC.svelte","../../src/utils/labelsPlugin.js","../../src/components/layers/Layer_311.svelte","../../src/components/layers/Layer_DOHMN.svelte","../../src/components/layers/Layer_Church_School.svelte","../../src/components/Map.svelte","../../src/components/Infobox.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nconst seen_callbacks = new Set();\nfunction flush() {\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store'\n\nfunction createLayers() {\n  const { subscribe, update } = writable([])\n\n  return {\n    subscribe,\n    add: layer => update(layers => [...layers, layer])\n  }\n}\n\nfunction createInfo() {\n  const { subscribe, set, update } = writable({})\n\n  return {\n    subscribe,\n    show: obj => {\n      //open modal, when info is set\n      isModalOpen.set(true)\n      return set(obj)\n    }\n  }\n}\n\nexport const layers = createLayers()\nexport const info = createInfo()\nexport const isModalOpen = writable(false)\nexport const mapStore = writable(null)\n","<script>\n  import { mapStore } from '../stores'\n  let value = ''\n  let searchAddrs = []\n  let marker\n\n  function _set(addr) {\n    value = addr\n    //clear searchAddrs\n    searchAddrs = []\n\n    fetch(`https://geosearch.planninglabs.nyc/v1/search?text=${value}`)\n      .then(response => response.json())\n      .then(response => {\n        //use the first address\n        if (response.features.length) {\n          const coords = response.features[0].geometry.coordinates.reverse()\n          $mapStore.setView(coords)\n\n          if (marker) marker.remove()\n          marker = L.marker(coords).addTo($mapStore)\n        } else {\n          //throw error\n        }\n      })\n  }\n\n  function _search() {\n    if (value.length > 1) {\n      fetch(`https://geosearch.planninglabs.nyc/v1/search?text=${value}`)\n        .then(response => response.json())\n        .then(\n          response =>\n            (searchAddrs = response.features\n              .map(feature =>\n                feature.properties.label.replace(', New York, NY, USA', '')\n              )\n              .slice(0, 5))\n        )\n    } else {\n      searchAddrs = []\n    }\n  }\n\n  function reset_map() {\n    if (marker) marker.remove()\n    $mapStore.setView([40.73, -74], 17)\n  }\n</script>\n\n<form on:submit|preventDefault=\"{_set}\">\n  <input\n    id=\"address\"\n    placeholder=\"Enter a NYC Address\"\n    type=\"text\"\n    name=\"address\"\n    bind:value\n    autocomplete=\"off\"\n    on:keyup=\"{_search}\"\n  />\n  <ul>\n    {#each searchAddrs as addr}\n    <li on:click=\"{() => _set(addr)}\">{addr}</li>\n    {/each}\n  </ul>\n  <input type=\"submit\" value=\"Search\" />\n  <a href=\"#\" on:click=\"{reset_map}\" class=\"reset_map\">Reset Map</a>\n</form>\n\n<style>\n  form {\n    font-family: 'Lato', sans-serif;\n    font-size: 0.8em;\n  }\n  #address {\n    width: 100%;\n    padding: 5px 15px;\n    box-sizing: border-box;\n    margin-bottom: 5px;\n  }\n\n  input[type='submit'] {\n    background-color: #6a6a6a;\n    border: none;\n    color: white;\n    padding: 5px 10px;\n    text-decoration: none;\n    cursor: pointer;\n    font-family: 'Lato', sans-serif;\n  }\n\n  ul {\n    padding-left: 10px;\n    color: rgb(61, 61, 61);\n    background-color: aliceblue;\n    margin: 0px;\n  }\n\n  li {\n    margin-left: 5px;\n  }\n\n  .reset_map {\n    font-size: 11px;\n    float: right;\n  }\n</style>\n","<script>\n  export let layer\n\n  let { label, checked, notes, ref } = layer\n  let legend = 'legend' in layer ? layer.legend : []\n\n  $: {\n    //toggle layer on and off\n    checked ? ref.show() : ref.hide()\n  }\n</script>\n\n<div class=\"switch-box\">\n  <div class=\"input\">\n    <label class=\"switch\">\n      <input type=\"checkbox\" bind:checked=\"{checked}\" />\n      <span class=\"slider\"></span>\n    </label>\n    <span class=\"name\">{label}</span>\n  </div>\n  {#if notes}\n  <em>{notes}</em>\n  {/if} {#if legend.length}\n  <div class=\"legend\">\n    {#each legend as { image, text }}\n    <img src=\"{image}\" alt=\"icon\" class=\"icon\" />\n    <p>{text}</p>\n    {/each}\n  </div>\n  {/if}\n</div>\n\n<style>\n  .input {\n    display: flex;\n    margin: 0 5px 0 0;\n  }\n  em {\n    font-size: 0.7em;\n  }\n  .legend {\n    display: flex;\n    font-size: 0.7em;\n  }\n  .icon {\n    margin-left: 5px;\n    margin-right: 3px;\n  }\n  label {\n    font-size: 0.8em;\n    cursor: pointer;\n  }\n  .name {\n    font-family: 'Open Sans', sans-serif;\n    font-size: 0.8em;\n  }\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 30px;\n    height: 16px;\n    margin-right: 5px;\n  }\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    transition: 0.4s;\n  }\n  .slider:before {\n    position: absolute;\n    content: '';\n    height: 10px;\n    width: 10px;\n    left: 3px;\n    bottom: 3px;\n    background-color: white;\n    transition: 0.4s;\n  }\n  input:checked + .slider {\n    background-color: #6a6a6a;\n  }\n  input:focus + .slider {\n    box-shadow: 0 0 1px #6a6a6a;\n  }\n  input:checked + .slider:before {\n    transform: translateX(12px);\n  }\n</style>\n","<script>\n  import AddressSearch from './AddressSearch.svelte'\n  import LoadingIndicator from './LoadingIndicator.svelte'\n  import Switch from './Switch.svelte'\n  import { layers } from '../stores.js'\n\n  $: sortedLayers = $layers.sort((a, b) => a.order - b.order)\n</script>\n\n<div class=\"toolbox\">\n  <h2>SLA Mapper (SLAM)</h2>\n  <div class=\"about\">\n    <h5 class=\"lighter\">\n      Tool that aggregates data that community boards often have to gather in\n      order to review liquor license applications and sidewalk café\n      applications. Displaying this information in a unified view saves\n      community boards considerable time and resources.\n    </h5>\n  </div>\n  <div class=\"separator\"></div>\n  <h4>Instructions</h4>\n  <h5 class=\"lighter\">\n    Click on a map feature to learn more about an establishment's liquor\n    license, sidewalk café license, restaurant health grades, or 311 complaints.\n  </h5>\n  <div class=\"separator\"></div>\n  {#if sortedLayers.length === 0}\n  <LoadingIndicator></LoadingIndicator>\n  {/if} {#each sortedLayers as layer (layer.order)}\n  <Switch {layer}></Switch>\n  {/each}\n  <div class=\"separator\"></div>\n  <h4>Search</h4>\n  <AddressSearch></AddressSearch>\n  <div class=\"separator\"></div>\n  <footer>\n    <figure>\n      <img\n        class=\"logo\"\n        alt=\"BetaNYC Logo\"\n        src=\"images/BetaNYC_short_white_on_blue.png\"\n      />\n      <figcaption class=\"logo_caption\">A BetaNYC Tool</figcaption>\n    </figure>\n    <div class=\"footer-links\">\n      <a href=\"https://github.com/BetaNYC/SLAM/blob/master/LICENSE\"\n        >GNU General Public License</a\n      >\n      <span> | </span>\n      <a href=\"https://github.com/BetaNYC/SLAM/issues\">File a GitHub issue</a>\n    </div>\n  </footer>\n</div>\n\n<style>\n  .toolbox {\n    background: #fff;\n    border-radius: 4px;\n    padding: 2px 16px;\n    font-family: 'Lato', sans-serif;\n  }\n\n  h1,\n  h2,\n  h3 {\n    font-family: 'Playfair Display', serif;\n    line-height: 32px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    text-align: center;\n  }\n\n  h4,\n  h5,\n  h6 {\n    margin: 0;\n    padding-bottom: 5px;\n    font-weight: normal;\n  }\n\n  .about {\n    margin-top: 20px;\n    letter-spacing: -0.1px;\n  }\n\n  .lighter {\n    color: #444444;\n  }\n\n  .separator {\n    min-height: 1px;\n    background-color: rgba(46, 60, 67, 0.08);\n    margin: 16px 0;\n  }\n\n  .footer {\n    text-align: center;\n  }\n\n  .logo {\n    width: 50px;\n    margin: auto;\n    display: block;\n  }\n\n  .logo_caption {\n    font-size: 0.6rem;\n    margin-top: 5px;\n    text-align: center;\n  }\n\n  .footer-links {\n    display: flex;\n    align-items: center;\n    font-size: 11px;\n    justify-content: space-between;\n  }\n</style>\n","export const carto_apikey = CARTO_API_KEY\nexport const geoclient_id = GEOCLIENT_ID\nexport const geoclient_key = GEOCLIENT_KEY\n","<script>\n  import { getContext } from 'svelte'\n  import { layers, info } from '../../stores'\n  import { carto_apikey, geoclient_id, geoclient_key } from '../../utils/keys'\n  1\n  const { getMap, getCartoClient, getPopup } = getContext(carto_apikey)\n  const map = getMap()\n  const client = getCartoClient()\n  const popup = getPopup()\n\n  //query SLA data source from Carto and stack multiple entries at the same location\n  const source = new carto.source.SQL(`\n\t\tWITH\n\t\t\tg AS (\n\t\t\t\tSELECT cartodb_id, ST_Transform(ST_GeomFromText(georeference, 4326),3857) AS the_geom_webmercator\n\t\t\t\tFROM liquor_authority_quarterly_list_of_active_licenses WHERE georeference != '' AND zone = 1 AND license_type_code in ('OP','SW','SB','SL','VL','RL','HL','CL','CT','EL','TL','CR','RW','HW','CW','TW','WC','EB','MR')\n\t\t\t),\n\t\t\tm AS (\n\t\t\t\tSELECT array_agg(cartodb_id) AS id_list, the_geom_webmercator, ST_Y(the_geom_webmercator) AS y\n\t\t\t\tFROM g\n\t\t\t\tGROUP BY the_geom_webmercator\n\t\t\t\tORDER BY y DESC\n\t\t\t),\n\t\t\tf AS (\n\t\t\t\tSELECT generate_series(1, array_length(id_list,1)) AS p, unnest(id_list) AS cartodb_id, the_geom_webmercator\n\t\t\t\tFROM m\n\t\t\t)\n      SELECT ST_Translate(f.the_geom_webmercator,0,f.p*5) AS the_geom_webmercator, q.cartodb_id, premise_name, dba, license_type_code, license_issued_date, license_expiration_date, serial_number, certificate_number, premise_address, premise_zip,\n        method_of_operation, days_hours_of_operation,\n\t\t\t\tEXTRACT(year from to_date(license_expiration_date, 'MM/DD/YYYY')) AS expiration_year\n\t\t\t\tFROM f, liquor_authority_quarterly_list_of_active_licenses q\n\t\t\t\tWHERE f.cartodb_id = q.cartodb_id\t\t\n        `)\n\n  //Style the SLA data and color differently if expiring this year\n  const style = new carto.style.CartoCSS(`\n        #layer {\n            marker-width: 20;\n            marker-fill-opacity: 0.9;\n            marker-file: url('https://s3.amazonaws.com/com.cartodb.users-assets.production/maki-icons/bar-18.svg');\n            marker-allow-overlap: true;\n            marker-line-width: 1;\n            marker-line-color: #ffffff;\n            marker-line-opacity: 1;\n        }\n        #layer [expiration_year <=2020] {\n            marker-fill: #e10012;\n        }\n        #layer [expiration_year > 2020] {\n            marker-fill: #e34dee;\n        }\n        #layer [zoom > 16] {\n            marker-width: 20;\n        }\n        #layer [zoom <=16] {\n            marker-width: 15;\n        }\n        #layer [zoom <=15] {\n            marker-width: 13;\n        }\n        #layer [zoom <=14] {\n            marker-width: 8;\n        }\n        #layer [zoom <=12] {\n            marker-width: 4;\n        }\n    `)\n\n  const layer = new carto.layer.Layer(source, style, {\n    featureClickColumns: [\n      'premise_name',\n      'dba', // doing_business_as_dba_\n      'serial_number',\n      'license_type_code', // license_type_name, TODO - lookup\n      'license_issued_date', //license_original_issue_date does not exist, remove references; exist as license_effective_date\n      'license_expiration_date',\n      'certificate_number',\n      'premise_address', //actual_address_of_premises_address1_, TODO - combine address part 2\n      'premise_zip', //'zip'\n      'method_of_operation',\n      'days_hours_of_operation'\n    ]\n  })\n\n  client\n    .addLayer(layer)\n    .then(() => {\n      //add layer to state\n      layers.add({\n        order: 1,\n        ref: layer,\n        label: 'State Liquor Authority Licenses',\n        legend: [\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629205705bar-15.svg',\n            text: 'Expiring before 2020'\n          },\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629205836bar-15.svg',\n            text: 'Expiring after 2020'\n          }\n        ],\n        checked: true\n      })\n    })\n    .catch(error => console.log(error.message))\n\n  //set pop-up content when hovering over a feature\n  layer.on('featureOver', featureEvent => {\n    let address = ''\n\n    address += `<div class=\"widget\">`\n\n    address += `<p class = \"bold\">${featureEvent.data.premise_address}</p><p>${featureEvent.data.dba}</p><p>${featureEvent.data.premise_name}</p>`\n    popup.setContent(address)\n    popup.setLatLng(featureEvent.latLng)\n    if (!popup.isOpen()) {\n      popup.openOn(map)\n    }\n  })\n\n  layer.on('featureClicked', featureEvent => {\n    //variables for the innerHTML content that will be filled into each div in the infobox\n    let content = ''\n    let source = ''\n\n    //variable to store BIN from city geoclient\n    var bin = 0\n\n    //check if dba is filled in; otherwise use premises name as the header\n    if (featureEvent.data.doing_business_as_dba != '') {\n      content += `<h3 class = \"bold\">${featureEvent.data.dba}</h3><h4 class = \"bold\">${featureEvent.data.premise_name}</h4>`\n    } else {\n      content += `<h3 class = \"bold\">${featureEvent.data.premise_name}</h3>`\n    }\n    content += `<h4>${featureEvent.data.premise_address}</h4><div class=\"separator\"></div>\n\t\t\t\t<h5 class = \"lighter\">License Type: ${featureEvent.data.license_type_code}</h5>\n\t\t\t\t<h5 class = \"lighter\">Serial number: ${featureEvent.data.serial_number}</h5>\n\t\t\t\t<h5 class = \"lighter\">Effective Date: ${featureEvent.data.license_issued_date}</h5>\n        <h5 class = \"lighter\">Expiration Date: ${featureEvent.data.license_expiration_date}</h5>\n        <h5 class = \"lighter\">Method of Operation: ${featureEvent.data.method_of_operation}</h5>\n        <h5 class = \"lighter\">Days/Hours of Operation: ${featureEvent.data.days_hours_of_operation}</h5>\n\t\t\t\t<h5 class = \"lighter\"><a href= 'https://www.tran.sla.ny.gov/servlet/ApplicationServlet?pageName=com.ibm.nysla.data.publicquery.PublicQuerySuccessfulResultsPage&validated=true&serialNumber=${featureEvent.data.serial_number}&licenseType=${featureEvent.data.license_type_code}' target = '_blank'>Click here for more information about this license.</a></h5>`\n\n    //adds CORS header to proxy request getting around errors\n    const proxyurl = 'https://cors-anywhere.herokuapp.com/'\n\n    //Query the city's Geoclient API to get the BIN of the building at the address listed in the SLA data. we will use this to collect the Certificate of Occupancy\n    var url = `https://api.cityofnewyork.us/geoclient/v1/search.json?input=${featureEvent.data.premise_address} ${featureEvent.data.premise_zip}&app_id=${geoclient_id}&app_key=${geoclient_key}`\n\n    var slaBIN = new Promise(function(resolve) {\n      fetch(proxyurl + url)\n        .then(function(response) {\n          return response.json()\n        })\n        .then(function(address) {\n          const results = address.results\n          const response = results[0].response\n          console.log(response)\n          resolve(response.buildingIdentificationNumber)\n        })\n        .catch(function(error) {\n          resolve(0)\n        })\n    })\n\n    slaBIN.then(bin => {\n      if (bin == 0) {\n        content += `<div class=\"separator\"></div><h4>Certificate of Occupancy</h4>><h5 class = \"lighter\">No BIN Found.</h5>`\n      }\n      //display a link to BISweb for the Certificate of Occupancy at that BIN\n      else {\n        const certURL = `http://a810-bisweb.nyc.gov/bisweb/COsByLocationServlet?requestid=1&allbin=${bin}`\n        content += `<div class=\"separator\"></div><h4>Certificate of Occupancy</h4><h5 class = \"lighter\">BIN: <a href= '${certURL}' target = '_blank'>${bin}</a></h5>`\n      }\n\n      //add source information\n      source += `<div class=\"separator\"></div><h6>Source: <a href='https://data.ny.gov/Economic-Development/Liquor-Authority-Quarterly-List-of-Active-Licenses/hrvs-fxs2'>Liquor Authority Quarterly List of Active Licenses.</a></h6><h6>Data is filtered to liquor licenses reviewed by the New York City Agency Office. Data is updated quarterly.</h6>`\n      //set the info_box to display as block\n\n      info.show({\n        content,\n        source,\n        charts: []\n      })\n    })\n  })\n\n  client.getLeafletLayer().addTo(map)\n</script>\n","<script>\n  import { getContext } from 'svelte'\n  import { layers, info } from '../../stores'\n  import { carto_apikey } from '../../utils/keys'\n\n  const { getMap, getCartoClient, getPopup } = getContext(carto_apikey)\n  const map = getMap()\n  const client = getCartoClient()\n  const popup = getPopup()\n\n  //query sidewalk café data source from Carto and stack multiple entries at the same location:\n  const source = new carto.source.SQL(`\n          SELECT * FROM sidewalk_caf_licenses_and_applications\n  `)\n\n  //Style the sidewalk café data and color inactive licenses differently\n  const style = new carto.style.CartoCSS(`\n  \t\t\t\t#layer {\n  \t\t\t\tmarker-width: 18;\n  \t\t\t\tmarker-fill-opacity: 0.9;\n  \t\t\t\tmarker-file: url('https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180612173650picnic-site-15.svg');\n  \t\t\t\tmarker-allow-overlap: true;\n  \t\t\t\tmarker-line-width: 0.25;\n  \t\t\t\tmarker-line-color: #FFFFFF;\n  \t\t\t\tmarker-line-opacity: 1;\n  \t\t\t\t}\n  \t\t\t\t#layer [zoom > 16]{\n  \t\t\t\t\tmarker-width: 20;\n  \t\t\t\t}\n  \t\t\t\t#layer [zoom <= 16]{\n  \t\t\t\tmarker-width: 15;\n  \t\t\t\t}\n  \t\t\t\t#layer [zoom <= 15]{\n  \t\t\t\tmarker-width: 13;\n  \t\t\t\t}\n  \t\t\t\t#layer [zoom <= 14]{\n  \t\t\t\tmarker-width: 8;\n  \t\t\t\t}\n  \t\t\t\t#layer [zoom <= 12]{\n  \t\t\t\tmarker-width: 4;\n  \t\t\t\t}\n  \t\t\t\t\t#layer [lic_status = 'Active']{\n  \t\t\t\tmarker-fill: #07d91c;\n  \t\t\t\t\t}\n  \t\t\t\t\t#layer [lic_status = 'Inactive']{\n  \t\t\t\tmarker-fill: #227527;\n  \t\t\t\t\t}\n  \t\t\t\t`)\n  const layer = new carto.layer.Layer(source, style, {\n    featureOverColumns: [\n      'license_nbr',\n      'lic_status',\n      'business_name',\n      'business_name2',\n      'building',\n      'street',\n      'swc_type',\n      'swc_sq_ft',\n      'swc_tables',\n      'swc_chairs',\n      'community_district',\n      'expiration_date',\n      'issuance',\n      'issuance_dd',\n      'cb',\n      'cb_dd',\n      'app_id',\n      'app_swc_type',\n      'app_sq_ft',\n      'app_tables',\n      'app_chairs',\n      'intake_dd'\n    ]\n  })\n\n  client\n    .addLayer(layer)\n    .then(() => {\n      //add layer to state\n      layers.add({\n        order: 2,\n        ref: layer,\n        label: 'Sidewalk Café Licenses',\n        legend: [\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629210223picnic-site-15.svg',\n            text: 'Active'\n          },\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629210143picnic-site-15.svg',\n            text: ' Inactive'\n          }\n        ],\n        checked: true\n      })\n    })\n    .catch(error => console.log(error.message))\n\n  //set pop-up content when hovering over a feature\n  layer.on('featureOver', featureEvent => {\n    let address = ''\n\n    address += `<div class=\"widget\">`\n\n    address += `<p class = \"bold\">${featureEvent.data.building} ${featureEvent.data.street}</p><p>${featureEvent.data.business_name2}</p><p>${featureEvent.data.business_name}</p>`\n    popup.setContent(address)\n    popup.setLatLng(featureEvent.latLng)\n    if (!popup.isOpen()) {\n      popup.openOn(map)\n    }\n  })\n\n  layer.on('featureClicked', featureEvent => {\n    //variables for the innerHTML content that will be filled into each div in the infobox\n    let content = ''\n    let source = ''\n\n    //variables to check whether the license is under review or expired\n    let under_review = false\n    let expired = false\n\n    //check whether the selected sidewalk café permit is expired or under review\n    if (\n      featureEvent.data.issuance == 'Pending Review' &&\n      featureEvent.data.lic_status == 'Inactive'\n    ) {\n      under_review = true\n      expired = false\n    } else if (\n      featureEvent.data.issuance == 'Issued' &&\n      featureEvent.data.lic_status == 'Inactive'\n    ) {\n      under_review = false\n      expired = true\n    }\n\n    content += `<h3 class = \"bold\">${featureEvent.data.business_name2}</h3>\n\t\t\t\t<h4 class = \"bold\">${featureEvent.data.business_name}</h4>\n\t\t\t\t<h4>${featureEvent.data.building} ${featureEvent.data.street}</h4><div class=\"separator\"></div>`\n\n    //set content if under review\n    if (under_review == true) {\n      content += `<h5 class = \"lighter\">${featureEvent.data.issuance}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Application ID: ${featureEvent.data.app_id}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Application Type: ${featureEvent.data.app_swc_type}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Application Square footage: ${featureEvent.data.app_sq_ft}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Application Tables: ${featureEvent.data.app_tables}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Application Chairs: ${featureEvent.data.app_chairs}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Application Intake Date: ${featureEvent.data.intake_dd}</h5>\n\t\t\t\t\t <h5><a href=\"https://www1.nyc.gov/assets/dca/SidewalkCafeMap/index.html#home\" target=\"_blank\">Click here for more information about this sidewalk cafe.</h5>`\n    }\n\n    //set content if expired\n    else if (expired == true) {\n      content += `<h5 class = \"lighter\">Status: ${featureEvent.data.lic_status}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">License Number: ${featureEvent.data.license_nbr}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Issuance Date: ${featureEvent.data.issuance_dd}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Expiration Date: ${featureEvent.data.expiration_date}</h5>`\n    }\n\n    //set content is active\n    else\n      content += `<h5 class = \"lighter\">Status: ${featureEvent.data.lic_status}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">License Number: ${featureEvent.data.license_nbr}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Type: ${featureEvent.data.swc_type}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Square footage: ${featureEvent.data.swc_sq_ft}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Tables: ${featureEvent.data.swc_tables}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Chairs: ${featureEvent.data.swc_chairs}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Issuance Date: ${featureEvent.data.issuance_dd}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Expiration Date: ${featureEvent.data.expiration_date}</h5>\n\t\t\t\t\t <div class=\"separator\"></div>\n\t\t\t\t\t <h5 class = \"lighter\">Community Board: ${featureEvent.data.community_district}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Community Board Review Status: ${featureEvent.data.cb}</h5>\n\t\t\t\t\t <h5 class = \"lighter\">Community Board Review Status Date: ${featureEvent.data.cb_dd}</h5>\n\t\t\t\t\t <h5><a href=\"https://www1.nyc.gov/assets/dca/SidewalkCafeMap/index.html#home\" target=\"_blank\">Click here for more information about this sidewalk cafe.</h5>\n\t\t\t\t\t `\n\n    //add source information\n    source += `<div class=\"separator\"></div><h6>Source: <a href='https://data.cityofnewyork.us/Business/Sidewalk-Caf-Licenses-and-Applications/qcdj-rwhu/data'>Sidewalk Cafe Licenses and Applications.</a></h6><h6>Data is updated weekly.</h6>`\n\n    //fill the innerHTML of each section\n    info.show({\n      content,\n      source,\n      charts: []\n    })\n  })\n\n  client.getLeafletLayer().addTo(map)\n</script>\n","//plug-in so that data labels appear on each dot of the line charts (the rent-stabilized units by year chart and the 311 complaints over time chart)\n//see: http://www.chartjs.org/samples/latest/advanced/data-labelling.html\nconst LabelsPlugin = {\n  afterDatasetsDraw: function(chart) {\n    var ctx = chart.ctx\n    chart.data.datasets.forEach(function(dataset, i) {\n      var meta = chart.getDatasetMeta(i)\n      if (!meta.hidden) {\n        meta.data.forEach(function(element, index) {\n          // Draw the text in black, with the specified font\n          ctx.fillStyle = 'rgb(100, 100, 100)'\n          var fontSize = 10\n          var fontStyle = 'normal'\n          var fontFamily = 'Helvetica Neue'\n          ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily)\n          let dataNum = 0\n          if (dataset.data[index] != null) {\n            dataNum = dataset.data[index]\n          }\n          // Just naively convert to string for now\n          var dataString = dataNum.toString()\n          // Make sure alignment settings are correct\n          ctx.textAlign = 'center'\n          ctx.textBaseline = 'middle'\n          var padding = -15\n          var position = element.tooltipPosition()\n\n          if (dataString != 0) {\n            ctx.fillText(\n              dataString,\n              position.x,\n              position.y - fontSize / 2 - padding\n            )\n          }\n        })\n      }\n    })\n  }\n}\n\nexport default LabelsPlugin\n","<script>\n  import { getContext } from 'svelte'\n  import { layers, info } from '../../stores'\n  import { carto_apikey } from '../../utils/keys'\n  import LabelsPlugin from '../../utils/labelsPlugin'\n\n  const { getMap, getCartoClient, getPopup } = getContext(carto_apikey)\n  const map = getMap()\n  const client = getCartoClient()\n  const popup = getPopup()\n\n  //query 311 data source from Carto and stack multiple entries at the same location:\n  const source = new carto.source.SQL(`WITH\n        s AS (\n            SELECT ROW_NUMBER() OVER(ORDER BY to_timestamp(created_date, 'MM/DD/YYYY') ASC) rownum, the_geom_webmercator, cartodb_id\n            FROM club_bar_restaurant_complaints_since_jan_1_2017),\n        m AS (\n            SELECT array_agg(cartodb_id ORDER BY rownum) id_list, the_geom_webmercator, ST_Y(the_geom_webmercator) y\n            FROM s\n            GROUP BY the_geom_webmercator\n            ORDER BY y DESC),\n        f AS (\n            SELECT  generate_series(1, array_length(id_list,1)) p, unnest(id_list) cartodb_id, the_geom_webmercator\n            FROM m)\n        SELECT  ST_Translate(f.the_geom_webmercator,0,f.p*3) the_geom_webmercator, f.cartodb_id, q.complaint_type, q.descriptor, q.created_date, q.incident_address, q.intersection_street_1, q.intersection_street_2, q.location geometry\n            FROM f, club_bar_restaurant_complaints_since_jan_1_2017 q\n            WHERE f.cartodb_id = q.cartodb_id\n    `)\n\n  //Style the 311 data and color different complaint tyles differently\n  const style = new carto.style.CartoCSS(`\n  \t\t#layer {\n  \t\t\tmarker-fill: #4d88ee;\n  \t\t\tmarker-fill-opacity: 0.9;\n  \t\t\tmarker-allow-overlap: true;\n  \t\t\tmarker-line-width: 0.25;\n  \t\t\tmarker-line-color: #FFFFFF;\n  \t\t\tmarker-line-opacity: 1;\n  \t\t}\n  \t\t#layer[complaint_type=\"Drinking\"] {\n  \t\t\tmarker-fill: #3622b9;\n  \t\t}\n  \t\t#layer[complaint_type=\"Noise - Commercial\"] {\n  \t\t\tmarker-fill: #4d88ee;\n  \t\t}\n  \t\t#layer [zoom > 16]{\n  \t\t\tmarker-width: 7;\n  \t\t}\n  \t\t#layer [zoom <= 16]{\n  \t\tmarker-width: 5;\n  \t\t}\n  \t\t#layer [zoom <= 15]{\n  \t\tmarker-width: 4;\n  \t\t}\n  \t\t#layer [zoom <= 14]{\n  \t\tmarker-width: 3;\n  \t\t}\n  \t\t#layer [zoom <= 12]{\n  \t\tmarker-width: 2;\n  \t\t}\n\n            `)\n\n  const layer = new carto.layer.Layer(source, style, {\n    featureOverColumns: [\n      'geometry',\n      'incident_address',\n      'intersection_street_1',\n      'intersection_street_2',\n      'created_date',\n      'descriptor',\n      'complaint_type'\n    ]\n  })\n\n  client\n    .addLayer(layer)\n    .then(() => {\n      //add layer to state\n      layers.add({\n        order: 3,\n        ref: layer,\n        label: '311 Complaints Since 2017',\n        notes: '*Filtered to those made at club/bar/restaurant',\n        legend: [\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629210011circle-11.svg',\n            text: 'Noise'\n          },\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629210053circle-11.svg',\n            text: 'Drinking'\n          }\n        ],\n        checked: true\n      })\n    })\n    .catch(error => console.log(error.message))\n\n  //set pop-up content when hovering over a feature\n  layer.on('featureOver', featureEvent => {\n    let dateDescriptor = ''\n\n    dateDescriptor += `<div class=\"widget\">`\n    //check if there is an incident address listed; if not concatenate the data in fields intersection1 and intersection2 to create an address\n    if (featureEvent.data.incident_address != '')\n      dateDescriptor += `<p class = \"bold\">${featureEvent.data.incident_address}</p>`\n    else\n      dateDescriptor += `<p class = \"bold\">${featureEvent.data.intersection_street_1}, ${featureEvent.data.intersection_street_2}</p>`\n    dateDescriptor += `<p>Complaint Type: ${featureEvent.data.complaint_type}</p><p>Descriptor: ${featureEvent.data.descriptor}</p><p>Date: ${featureEvent.data.created_date}</p>`\n    popup.setContent(dateDescriptor)\n    popup.setLatLng(featureEvent.latLng)\n    if (!popup.isOpen()) {\n      popup.openOn(map)\n    }\n  })\n\n  layer.on('featureClicked', featureEvent => {\n    let descriptor_chart\n    let year_chart\n\n    //variables for the innerHTML content that will be filled into each div in the infobox\n    let content = ''\n    let source = ''\n\n    //variables to store the descriptors of complaints and number of complaints in that descriptor for the selected location\n    let descriptor_arr = {}\n    let descriptor_labels = []\n    let descriptor_data = []\n    let descriptor_colors = []\n\n    //variables to store the years of complaints and number of complaints in that year for the selected location\n    let year_arr = {}\n    let year_labels = []\n    let year_data = []\n    let year_colors = []\n\n    //query 311 complaint data made about bar/club/restaurant since 2017 (stored in carto) at the selected location; select, complaint type, descriptor, and year\n    const url = `https://betanyc.carto.com/api/v2/sql/?q=SELECT cartodb_id, descriptor, created_date, EXTRACT(year from to_date(created_date, 'MM/DD/YYYY')) AS created_year FROM club_bar_restaurant_complaints_since_jan_1_2017 WHERE location='${featureEvent.data.geometry}'&api_key=${carto_apikey}`\n\n    //variable to count complaints\n    let complaints_count = 0\n\n    fetch(url)\n      .then(function(response) {\n        return response.json()\n      })\n      .then(function(geom_data) {\n        complaints_count = geom_data.rows.length\n\n        //if there is an incident address listed in the dataset at that location list it; otherwise concatenate the strings in intersection1 and intersection2 of the dataset\n        if (featureEvent.data.incident_address != '') {\n          content += `<h4 class = \"bold\">${featureEvent.data.incident_address}</h4>`\n        } else {\n          content += `<h4 class = \"bold\">${featureEvent.data.intersection_street_1}, ${featureEvent.data.intersection_street_2}</h4>`\n        }\n\n        // list total number of complaints\n        content += `<div class=\"separator\"></div><h5 class = \"lighter\">Total Number of Complaints: ${complaints_count}</h5>`\n\n        //store unique descriptors in the resulting data in an array and count the number of complaints for each of those descriptors\n        for (var i = 0; i < complaints_count; i++) {\n          descriptor_arr[geom_data.rows[i].descriptor] =\n            1 + (descriptor_arr[geom_data.rows[i].descriptor] || 0)\n        }\n\n        descriptor_labels = Object.keys(descriptor_arr)\n        descriptor_data = Object.values(descriptor_arr)\n\n        //assign random colors to each descriptor\n        for (var i = 0; i < descriptor_labels.length; i++) {\n          descriptor_colors.push(\n            '#' + (Math.random().toString(16) + '0000000').slice(2, 8)\n          )\n        }\n\n        //create pie chart of descriptors\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n\n        descriptor_chart = new Chart(ctx, {\n          type: 'pie',\n          data: {\n            labels: descriptor_labels,\n            datasets: [\n              {\n                backgroundColor: descriptor_colors,\n                data: descriptor_data\n              }\n            ]\n          },\n          options: {\n            title: {\n              display: true,\n              text: 'Complaints by Descriptor'\n            },\n            legend: {\n              display: true,\n              labels: {\n                fontSize: 10\n              },\n              position: 'right',\n              onClick: null,\n              fullWidth: true\n            }\n          }\n        })\n\n        //store unique years in the resulting data in an array and count the number of complaints for each of those years\n        for (var i = 0; i < complaints_count; i++) {\n          year_arr[geom_data.rows[i].created_year] =\n            1 + (year_arr[geom_data.rows[i].created_year] || 0)\n        }\n\n        year_labels = Object.keys(year_arr)\n        year_data = Object.values(year_arr)\n\n        //assign random colors to each year\n        for (var i = 0; i < year_labels.length; i++) {\n          year_colors.push(\n            '#' + (Math.random().toString(16) + '0000000').slice(2, 8)\n          )\n        }\n\n        //create bar chart of complaints per year\n        const canvas2 = document.createElement('canvas')\n        const ctx2 = canvas2.getContext('2d')\n        year_chart = new Chart(ctx2, {\n          type: 'line',\n          plugins: LabelsPlugin,\n          data: {\n            labels: year_labels,\n            datasets: [\n              {\n                borderColor: '#4d88ee',\n                data: year_data\n              }\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                    fontSize: 10\n                  },\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of Complaints',\n                    fontSize: 10\n                  }\n                }\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    fontSize: 10\n                  },\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: 'Year',\n                    fontSize: 10\n                  }\n                }\n              ]\n            },\n            title: {\n              display: true,\n              text: 'Complaints by Year'\n            }\n          }\n        })\n\n        //add source information\n        source += `<div class=\"separator\"></div><h6>Source: <a href='https://data.cityofnewyork.us/Social-Services/311-Service-Requests-from-2010-to-Present/erm2-nwe9/data'>311 Service Requests from 2010 to Present</a></h6><h6>Data was filtered to complaints at a club/restaurant/bar made since January 1, 2017. Data is updated daily.</h6>`\n\n        //fill the innerHTML of each section\n        info.show({\n          content,\n          source,\n          charts: [canvas, canvas2]\n        })\n      })\n  })\n\n  client.getLeafletLayer().addTo(map)\n</script>\n","<script>\n  import { getContext } from 'svelte'\n  import { layers, info } from '../../stores'\n  import { carto_apikey } from '../../utils/keys'\n\n  const { getMap, getCartoClient, getPopup } = getContext(carto_apikey)\n  const map = getMap()\n  const client = getCartoClient()\n  const popup = getPopup()\n\n  //query health inspection data source from Carto and stack multiple entries at the same location:\n  const source = new carto.source.SQL(`WITH\n  \t\tm AS (\n  \t\t\tSELECT array_agg(cartodb_id) id_list, the_geom_webmercator, ST_Y(the_geom_webmercator) y\n  \t\t\tFROM dohmh_inspections\n  \t\t\tGROUP BY the_geom_webmercator\n  \t\t\tORDER BY y DESC),\n  \t\tf AS (\n  \t\t\tSELECT  generate_series(1, array_length(id_list,1)) p, unnest(id_list) cartodb_id, the_geom_webmercator\n  \t\t\tFROM m)\n  \t\tSELECT  ST_Translate(f.the_geom_webmercator,0,f.p*5) the_geom_webmercator, f.cartodb_id, q.camis, q.dba, q.building, q.street\n  \t\t\tFROM f, dohmh_inspections q\n  \t\t\tWHERE f.cartodb_id = q.cartodb_id\n            `)\n\n  //Style the health inspection data\n  const style = new carto.style.CartoCSS(`\n  \t\t#layer{\n  \t\tmarker-fill: #ff8300;\n  \t\tmarker-fill-opacity: 0.9;\n  \t\tmarker-file: url('https://s3.amazonaws.com/com.cartodb.users-assets.production/maki-icons/embassy-18.svg');\n  \t\tmarker-allow-overlap: true;\n  \t\tmarker-line-width: 1;\n  \t\tmarker-line-color: #FFFFFF;\n  \t\tmarker-line-opacity: 1;\n  \t\t}\n  \t\t#layer [zoom > 16]{\n  \t\t\tmarker-width: 20;\n  \t\t}\n  \t\t#layer [zoom <= 16]{\n  \t\tmarker-width: 15;\n  \t\t}\n  \t\t#layer [zoom <= 15]{\n  \t\tmarker-width: 13;\n  \t\t}\n  \t\t#layer [zoom <= 14]{\n  \t\tmarker-width: 8;\n  \t\t}\n  \t\t#layer [zoom <= 12]{\n  \t\tmarker-width: 4;\n  \t\t}\n\n                `)\n\n  const layer = new carto.layer.Layer(source, style, {\n    featureOverColumns: ['camis', 'dba', 'building', 'street']\n  })\n\n  client\n    .addLayer(layer)\n    .then(() => {\n      //add layer to state\n      layers.add({\n        order: 4,\n        ref: layer,\n        label: 'Restaurant Health Grades',\n        legend: [\n          {\n            image:\n              'https://s3.amazonaws.com/com.cartodb.users-assets.production/production/betanyc/assets/20180629205921embassy-15.svg',\n            text: 'Restaurant'\n          }\n        ],\n        checked: true\n      })\n    })\n    .catch(error => console.log(error.message))\n\n  //set pop-up content when hovering over a feature\n  layer.on('featureOver', featureEvent => {\n    let address = ''\n\n    address += `<div class=\"widget\">`\n\n    address += `<p class = \"bold\">${featureEvent.data.building} ${featureEvent.data.street}</p><p>${featureEvent.data.dba}</p>`\n    popup.setContent(address)\n    popup.setLatLng(featureEvent.latLng)\n    if (!popup.isOpen()) {\n      popup.openOn(map)\n    }\n  })\n\n  layer.on('featureClicked', featureEvent => {\n    //variables for the innerHTML content that will be filled into each div in the infobox\n    let content = ''\n    let source = ''\n\n    content += `<h3 class = \"bold\">${featureEvent.data.dba}</h3><h4>${featureEvent.data.building} ${featureEvent.data.street}</h4><div class=\"separator\"></div>`\n\n    //query restaurant health inspection results dataset (stored in carto) to collect all of the inspection data about the selected restaurant; order from the most recent inspection to the oldest inspection\n    var url = `https://betanyc.carto.com/api/v2/sql/?q=SELECT * FROM dohmh_new_york_city_restaurant_inspection_results WHERE camis='${featureEvent.data.camis}' ORDER BY to_timestamp(grade_date, 'MM/DD/YYYY') DESC&api_key=${carto_apikey}`\n\n    fetch(url)\n      .then(function(response) {\n        return response.json()\n      })\n      .then(function(camis_data) {\n        //show the date and grade of the most recent inspection\n        if (camis_data.rows.length != 0) {\n          content += `\n\t\t\t\t\t\t<h5 class = \"lighter\">Most Recent Grade: ${camis_data.rows[0].grade}</h5>\n\t\t\t\t\t\t<h5 class = \"lighter\">Grade Date: ${camis_data.rows[0].grade_date}</h5>`\n        }\n\n        //DOHMH data has a different row for every flag raised in an inspection for every restaurant in the city. This means that for a given inspection, resulting in one grade, the restaurant may have several rows in the dataset, each having the same grade date and grade, but listing different flags that were raised. To deal with, we need to group the data about the inspection results for a restaurant by its grade date, and store the data in an array. Then we can loop through that array and select the first grade for each grade date. (every grade will be the same on a given grade date, so it doesn't necessarily have to be the first element. But we don't know how many rows there will be for each grade date, so the first element is safest.\n        Array.prototype.groupBy = function(prop) {\n          return this.reduce(function(groups, item) {\n            const val = item[prop]\n            groups[val] = groups[val] || []\n            groups[val].push(item)\n            return groups\n          }, {})\n        }\n        var grade_history = camis_data.rows.groupBy('grade_date')\n\n        content += `<div class=\"separator\"></div><h5 class = \"bold\">Grade History</h5>`\n        //show the first grade for each grade date in the array; (they should all be the same)\n        for (var i = 0; i < Object.keys(grade_history).length; i++) {\n          var key = Object.keys(grade_history)[i]\n          var values = Object.values(grade_history)[i]\n          if (key != '') {\n            content += `<h5 class = \"lighter\"> ${key}: ${values[0].grade}</h5>`\n          }\n        }\n        content += `<h5><a href=\"http://a816-restaurantinspection.nyc.gov/RestaurantInspection/SearchBrowse.do\" target=\"_blank\">Click here for more information about this restaurant.</h5> `\n\n        //add source information\n        source += `<div class=\"separator\"></div><h6>Source: <a href='https://data.cityofnewyork.us/Health/DOHMH-New-York-City-Restaurant-Inspection-Results/43nn-pn8j/data'>DOHMH New York City Restaurant Inspection Results.</a></h6><h6>Data is geocoded with the Department of City Plannings GeoSupport application once a week. The map does not display restaurants with addresses rejected by the application. Data is updated weekly.</h6>`\n\n        info.show({\n          content,\n          source,\n          charts: []\n        })\n      })\n  })\n\n  client.getLeafletLayer().addTo(map)\n</script>\n","<script>\n  import { getContext } from 'svelte'\n  import { layers } from '../../stores'\n  import { carto_apikey } from '../../utils/keys'\n\n  const { getMap, getCartoClient, getPopup } = getContext(carto_apikey)\n  const map = getMap()\n  const client = getCartoClient()\n  const popup = getPopup()\n\n  const source = new carto.source.SQL(`SELECT cartodb_id, the_geom_webmercator, address, bldgclass FROM bkmappluto WHERE bldgclass = 'W1' OR bldgclass = 'W2' OR bldgclass = 'W3' OR bldgclass = 'M1' OR bldgclass = 'M2' OR bldgclass = 'M3' OR bldgclass = 'M4' OR bldgclass = 'M9' UNION SELECT cartodb_id, the_geom_webmercator, address, bldgclass FROM bxmappluto WHERE bldgclass = 'W1' OR bldgclass = 'W2' OR bldgclass = 'W3' OR bldgclass = 'M1' OR bldgclass = 'M2' OR bldgclass = 'M3' OR bldgclass = 'M4' OR bldgclass = 'M9' UNION SELECT cartodb_id, the_geom_webmercator, address, bldgclass FROM mnmappluto WHERE bldgclass = 'W1' OR bldgclass = 'W2' OR bldgclass = 'W3' OR bldgclass = 'M1' OR bldgclass = 'M2' OR bldgclass = 'M3' OR bldgclass = 'M4' OR bldgclass = 'M9' UNION SELECT cartodb_id, the_geom_webmercator, address, bldgclass FROM simappluto WHERE bldgclass = 'W1' OR bldgclass = 'W2' OR bldgclass = 'W3' OR bldgclass = 'M1' OR bldgclass = 'M2' OR bldgclass = 'M3' OR bldgclass = 'M4' OR bldgclass = 'M9' UNION SELECT cartodb_id, the_geom_webmercator, address, bldgclass FROM qnmappluto WHERE bldgclass = 'W1' OR bldgclass = 'W2' OR bldgclass = 'W3' OR bldgclass = 'M1' OR bldgclass = 'M2' OR bldgclass = 'M3' OR bldgclass = 'M4' OR bldgclass = 'M9'\n            `)\n\n  //Style the school and church shapes\n  const style = new carto.style.CartoCSS(`\n\t\t\t\t\t#layer{\n\t\t\t\t\t\tpolygon-fill: #12eda4;\n\t\t\t\t\t}\n\t\t\t\t`)\n  const layer = new carto.layer.Layer(source, style, {\n    featureOverColumns: ['address', 'bldgclass']\n  })\n  client\n    .addLayer(layer)\n    .then(() => {\n      //add layer to state\n      layers.add({\n        order: 5,\n        ref: layer,\n        label: 'Show Schools and Churches',\n        checked: false\n      })\n    })\n    .catch(error => console.log(error.message))\n\n  //set pop-up content when hovering over a feature\n  layer.on('featureOver', featureEvent => {\n    let church_school_popup_content = ''\n    let building_type = ''\n\n    church_school_popup_content += `<div class=\"widget\">`\n    if (featureEvent.data.bldgclass == 'W1') {\n      building_type = 'Public Elementary, Junior, or Senior High'\n    } else if (featureEvent.data.bldgclass == 'W2') {\n      building_type = 'Parochial School, Yeshiva'\n    } else if (featureEvent.data.bldgclass == 'W3') {\n      building_type = 'School or Academy'\n    } else if (featureEvent.data.bldgclass == 'M1') {\n      building_type = 'Church, Synagogue, Chapel'\n    } else if (featureEvent.data.bldgclass == 'M2') {\n      building_type = 'Mission House (non-residential)'\n    } else if (featureEvent.data.bldgclass == 'M3') {\n      building_type = 'Parsonage, Rectory'\n    } else if (featureEvent.data.bldgclass == 'M4') {\n      building_type = 'Convent'\n    } else if (featureEvent.data.bldgclass == 'M9') {\n      building_type = 'Miscellaneous Religious Facility'\n    }\n    church_school_popup_content += `<p>Address: ${featureEvent.data.address}</p><p>DCP Building Class: ${building_type}</p>`\n    popup.setContent(church_school_popup_content)\n    popup.setLatLng(featureEvent.latLng)\n    if (!popup.isOpen()) {\n      popup.openOn(map)\n    }\n  })\n\n  client.getLeafletLayer().addTo(map)\n</script>\n","<script>\n  import { onMount, setContext } from 'svelte'\n  import { carto_apikey } from '../utils/keys'\n  import { mapStore } from '../stores'\n  import Layer_SLA from './layers/Layer_SLA.svelte'\n  import Layer_SWC from './layers/Layer_SWC.svelte'\n  import Layer_311 from './layers/Layer_311.svelte'\n  import Layer_DOHMN from './layers/Layer_DOHMN.svelte'\n  import Layer_Church_School from './layers/Layer_Church_School.svelte'\n\n  let container\n  let client\n  let map\n  let popup\n\n  setContext(carto_apikey, {\n    getMap: () => map,\n    getCartoClient: () => client,\n    getPopup: () => popup\n  })\n\n  onMount(() => {\n    client = new carto.Client({\n      apiKey: carto_apikey,\n      username: 'betanyc'\n    })\n\n    const maxZoom = 20\n\n    map = L.map(container, { maxZoom }).setView([40.73, -74], 18)\n    map.scrollWheelZoom.disable()\n\n    popup = L.popup({ closeButton: false })\n\n    L.tileLayer(\n      'https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n      { maxZoom }\n    ).addTo(map)\n\n    //add map to store\n    mapStore.set(map)\n  })\n</script>\n\n<div id=\"map\" bind:this=\"{container}\">\n  {#if map}\n  <Layer_SLA></Layer_SLA>\n  <Layer_SWC></Layer_SWC>\n  <Layer_311></Layer_311>\n  <Layer_DOHMN></Layer_DOHMN>\n  <Layer_Church_School></Layer_Church_School>\n  {/if}\n</div>\n\n<style>\n  #map {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","<script>\n  import { info } from '../stores.js'\n\n  let chartsContainer\n\n  $: {\n    //bind canvas elements from charts array\n    if (chartsContainer) {\n      chartsContainer.innerHTML = ''\n      $info.charts.forEach(chart => chartsContainer.appendChild(chart))\n    }\n  }\n</script>\n\n<div class=\"infobox\">\n  {@html $info.content}\n  <div bind:this=\"{chartsContainer}\"></div>\n  {@html $info.source}\n</div>\n\n<style>\n  .infobox :global(h1, h2, h3) {\n    font-family: 'Playfair Display', serif;\n    line-height: 32px;\n  }\n\n  .infobox :global(h1, h2, h3, h4) {\n    text-align: center;\n  }\n\n  .infobox :global(h4, h5, h6) {\n    margin: 0;\n    padding-bottom: 5px;\n    font-weight: normal;\n  }\n\n  .infobox :global(.separator) {\n    min-height: 1px;\n    background-color: rgba(46, 60, 67, 0.08);\n    margin: 16px 0;\n  }\n\n  .infobox :global(.bold) {\n    font-weight: bold;\n  }\n\n  .infobox :global(.lighter) {\n    color: #444444;\n  }\n</style>\n","<script>\n  import Toolbox from './components/Toolbox.svelte'\n  import Map from './components/Map.svelte'\n  import Infobox from './components/Infobox.svelte'\n  import { isModalOpen } from './stores.js'\n\n  function _closeModal() {\n    isModalOpen.set(false)\n  }\n</script>\n\n<main>\n  <div class=\"panel\">\n    <div class=\"left\">\n      <Toolbox></Toolbox>\n    </div>\n    <div class=\"right\">\n      <Map></Map>\n    </div>\n  </div>\n  {#if $isModalOpen}\n  <div class=\"modal\">\n    <span class=\"close\" on:click=\"{_closeModal}\">&times;</span>\n    <Infobox></Infobox>\n  </div>\n  {/if}\n</main>\n\n<style>\n  main {\n    height: 100%;\n    width: 100%;\n  }\n\n  .panel {\n    display: flex;\n    flex-wrap: wrap-reverse;\n    height: 100%;\n  }\n\n  .left {\n    flex: 1 1 300px;\n    flex-grow: 1;\n    height: 100%;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  .right {\n    flex: 999 1 0;\n    min-width: 375px;\n    height: 100%;\n  }\n\n  .modal {\n    position: fixed;\n    z-index: 1001;\n    top: 0;\n    right: 0;\n    margin: 0.8em 1em;\n    background-color: white;\n    padding: 10px;\n    width: 30%;\n    height: 60%;\n    overflow-y: auto;\n    box-shadow: 0 0px 16px rgba(0, 0, 0, 0.24);\n    border-radius: 4px;\n  }\n\n  .close {\n    color: #aaaaaa;\n    float: right;\n    font-size: 2.5em;\n    font-weight: bold;\n    margin-top: -0.5em;\n    position: fixed;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n  }\n\n  @media all and (max-width: 674px) {\n    .left {\n      height: 50%;\n    }\n    .right {\n      height: 50%;\n    }\n    .modal {\n      width: 80%;\n      height: 65%;\n      margin: 2em auto;\n      right: 0;\n      left: 0;\n      top: auto;\n      bottom: 0;\n    }\n  }\n</style>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","HtmlTag","[object Object]","html","this","e","u","n","t","innerHTML","Array","from","childNodes","m","current_component","set_current_component","get_current_component","Error","getContext","key","context","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flush","shift","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","create_component","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","Map","ready","ret","rest","hydrate","l","children","intro","SvelteComponent","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","layers","layer","createLayers","info","show","obj","isModalOpen","createInfo","mapStore","preventDefault","call","marker","searchAddrs","_set","addr","fetch","response","json","features","coords","geometry","coordinates","reverse","$mapStore","setView","remove","L","addTo","feature","properties","label","replace","slice","checked","notes","ref","legend","hide","order","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","sortedLayers","$layers","sort","carto_apikey","getMap","getCartoClient","getPopup","client","popup","source","carto","SQL","style","CartoCSS","Layer","featureClickColumns","addLayer","image","catch","error","console","log","message","on","featureEvent","address","premise_address","dba","premise_name","setContent","setLatLng","latLng","isOpen","openOn","content","doing_business_as_dba","license_type_code","serial_number","license_issued_date","license_expiration_date","method_of_operation","days_hours_of_operation","url","premise_zip","results","buildingIdentificationNumber","bin","charts","getLeafletLayer","featureOverColumns","building","street","business_name2","business_name","under_review","expired","issuance","lic_status","app_id","app_swc_type","app_sq_ft","app_tables","app_chairs","intake_dd","license_nbr","issuance_dd","expiration_date","swc_type","swc_sq_ft","swc_tables","swc_chairs","community_district","cb","cb_dd","LabelsPlugin","afterDatasetsDraw","chart","datasets","dataset","meta","getDatasetMeta","hidden","fillStyle","font","Chart","helpers","fontString","dataNum","dataString","toString","textAlign","textBaseline","position","tooltipPosition","fillText","x","y","fontSize","dateDescriptor","incident_address","intersection_street_1","intersection_street_2","complaint_type","descriptor","created_date","descriptor_chart","year_chart","descriptor_arr","descriptor_labels","descriptor_data","descriptor_colors","year_arr","year_labels","year_data","year_colors","complaints_count","geom_data","rows","keys","values","random","canvas","labels","backgroundColor","title","display","onClick","fullWidth","created_year","canvas2","ctx2","plugins","borderColor","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","xAxes","camis","camis_data","grade","grade_date","prototype","groupBy","prop","reduce","groups","item","val","grade_history","church_school_popup_content","building_type","bldgclass","container","Client","apiKey","username","maxZoom","scrollWheelZoom","disable","closeButton","tileLayer","chartsContainer","$info","_closeModal","body"],"mappings":"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"}